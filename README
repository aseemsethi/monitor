This is a Monitor Application v2.0

One of the things that can be tested is SSL. There are many Assessment Tools today that can also be used. One such list of tools is at https://github.com/ssllabs/research/wiki/Assessment-Tools.

A list of cve ids is maintained at: https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=openssl

The Monitor Application is a single binary called "mont_cust". This is spawned as:
 ./mont_cust ssl 100

The SSL Test Process executes all tests, and write:
- log file in /var/monT/<custID> - ssl_logs, 
- stat  file in /var/monT/<custID> - ssl_stats, 

Example of Config on /var/monT/100/config.xml

<custID id="100">
  <serverIP>8.8.8.8</serverIP>
  <pingTimer>5</pingTimer>
  <pingDuration>1</pingDuration>
</custID>

Logging
=======
See all logs (cust, ssl, ping) of the customer if 100 and/or 200 in separate xterm windows 
./logs 100 200


SSL Versions and Recommendations
================================
SSL 2.0 released in 1995 should no longer be used at all. 
SSL 2.0 was declared insecure primarily due to its re-use of encryption
keys as well as its lack of integrity checking of the SSL handshake
sequence.
A server using TLS 1.0 should select cipher RC4 for encryption 
during the cipher negotiation for HTTPS traffic to mitigate against 
the BEAST attack. 

NOTES:
======
If RSA is used for both Key Exchange (Encryption) and Authentication, then if the key is lost tomorrow to a hacker, the hacker could use that key to get all past data. This is becuase we reused the same key for 2 things - auth and encyption. Thus, DHE_RSA was done, wherein Ephemeral keys in DH were used to generate shared secret, and were signed by RSA for authentication. This info is sent in Server Key Exchange message.

