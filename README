This is a Monitor Application v2.0. Testing support for the following are implemented.
- SSL Functionaland Performance
- HTTP Performance
- IKEv2 Functional and Performance

The Monitor Application is a single binary called "mont_cust". This is spawned as follows :
 For SSL Function Test: ./mont_cust 100 ssl
 For SSL Performance Test: ./mont_cust 100 ssl_perf
 For HTTP Test: ./mont_cust 100 http

There are many Assessment Tools today that can also be used. One such list of tools is at https://github.com/ssllabs/research/wiki/Assessment-Tools.  A list of cve ids is maintained at: https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=openssl

Logging
=======
The SSL Test Process executes all tests, and write:
- log file in /var/monT/<custID> - ssl_logs, ssl_perf_logs, http_logs
- stat  file in /var/monT/<custID> - ssl_stats, ssl_perf_stats, http_stats

Example of Config on /var/monT/100/config.json
$ more /var/monT/100/config.json 
"custID": "100"
"serverIP": "127.0.0.1"
"sslPort": "4433"
"sslPerSec": "1"
"totalConn": "2"
"helloPerSec": "1"
"totalHello": "2"
"httpVerbose": "0"
"httpParallel": "2"
"httpSerial": "2"

SSL Versions and Recommendations
================================
SSL 2.0 released in 1995 should no longer be used at all. 
SSL 2.0 was declared insecure primarily due to its re-use of encryption
keys as well as its lack of integrity checking of the SSL handshake
sequence.
A server using TLS 1.0 should select cipher RC4 for encryption 
during the cipher negotiation for HTTPS traffic to mitigate against 
the BEAST attack. 

NOTES:
======
If RSA is used for both Key Exchange (Encryption) and Authentication, then if the key is lost tomorrow to a hacker, the hacker could use that key to get all past data. This is becuase we reused the same key for 2 things - auth and encyption. Thus, DHE_RSA was done, wherein Ephemeral keys in DH were used to generate shared secret, and were signed by RSA for authentication. This info is sent in Server Key Exchange message.

